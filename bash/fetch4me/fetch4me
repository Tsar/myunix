#!/bin/bash -e

USAGE_INFO="Usage: fetch4me [-w <dir>] [-r <referer>] (<url>)*"

ERROR_NO_PARAMS=0
ERROR_INVALID_PARAMS_DIR_EXPECTED=1
ERROR_INVALID_PARAMS_REFERER_EXPECTED=2
ERROR_CONFIG_NOT_AVALIABLE_FOR_READING_1=3
ERROR_CONFIG_NOT_AVALIABLE_FOR_READING_2=4

ERRORS_ARRAY[$ERROR_NO_PARAMS]="No parameters given"
ERRORS_ARRAY[$ERROR_INVALID_PARAMS_DIR_EXPECTED]="Invalid parameters: directory expected after \"-w\""
ERRORS_ARRAY[$ERROR_INVALID_PARAMS_REFERER_EXPECTED]="Invalid parameters: referer expected after \"-r\""
ERRORS_ARRAY[$ERROR_CONFIG_NOT_AVALIABLE_FOR_READING_1]="Config file \"~/.fetch4merc\" exists, but is not avaliable for reading"
ERRORS_ARRAY[$ERROR_CONFIG_NOT_AVALIABLE_FOR_READING_2]="Config file \"~/.fetch4me\" exists, but is not avaliable for reading"

homedir=`echo ~`

error() {
    echo ${ERRORS_ARRAY[$1]} >&2
    echo $USAGE_INFO >&2
    exit 1
}

takeParameter() {
    if cat "$homedir/$1" | grep "$2=" >/dev/null 2>&1
    then
        param=`cat "$homedir/$1" | grep "$2="`
        paramNameLen=${#2}
        paramNameLen=$[paramNameLen + 1]
        paramValue=${param:$paramNameLen}
    else
        paramValue=""
    fi
}

if [ $# -eq 0 ]
then
    error $ERROR_NO_PARAMS
fi

#args=($@)
#n=0
#echo ${args[$n]}

paramExpectedDir=0
paramExpectedReferer=0

urlsCount=0

qqedir=""
getElemFunc=""

for arg in $@
do
    if [ $paramExpectedDir -eq 1 ]
    then
        paramExpectedDir=0
        qqedir=$arg
        continue
    fi

    if [ $paramExpectedReferer -eq 1 ]
    then
        paramExpectedReferer=0
        referer=$arg
        continue
    fi

    case $arg in
        "-w")
            paramExpectedDir=1
            ;;
        "-r")
            paramExpectedReferer=1
            ;;
        *)
            urls[$urlsCount]=$arg
            urlsCount=$[urlsCount + 1]
            ;;
    esac
done

if [ $paramExpectedDir -eq 1 ]
then
    error $ERROR_INVALID_PARAMS_DIR_EXPECTED
fi
if [ $paramExpectedReferer -eq 1 ]
then
    error $ERROR_INVALID_PARAMS_REFERER_EXPECTED
fi

#debug echoes
echo $qqedir
echo $referer
echo $urlsCount
echo ${urls[0]}
echo ${urls[1]}
echo ${urls[2]}
#end of debug code

if [ -f "$homedir/.fetch4merc" ]
then
    if [ -r "$homedir/.fetch4merc" ]
    then
        if [ -z $qqedir ]
        then
            takeParameter ".fetch4merc" "QQEDIR"
            confDir=$paramValue
            if [ -n $confDir ]
            then
                qqedir=$confDir
            fi
        fi
        takeParameter ".fetch4merc" "GETELEMFUNC"
        confGetElemFunc=$paramValue
        if [ -n $confGetElemFunc ]
        then
            getElemFunc=$confGetElemFunc
        fi
    else
        error $ERROR_CONFIG_NOT_AVALIABLE_FOR_READING_1
    fi
fi

if [ -z $qqedir ]
then
    if [ -f "$homedir/.fetch4me" ]
    then
        if [ -r "$homedir/.fetch4me" ]
        then
            takeParameter ".fetch4me" "QQEDIR"
            confDir=$paramValue
            if [ -n $confDir ]
            then
                qqedir=$confDir
            fi
        else
            error $ERROR_CONFIG_NOT_AVALIABLE_FOR_READING_2
        fi
    fi
fi

if [ -z $getElemFunc ]
then
    if [ -f "$homedir/.fetch4me" ]
    then
        if [ -r "$homedir/.fetch4me" ]
        then
            takeParameter ".fetch4me" "GETELEMFUNC"
            confGetElemFunc=$paramValue
            if [ -n $confGetElemFunc ]
            then
                getElemFunc=$confGetElemFunc
            fi
        else
            error $ERROR_CONFIG_NOT_AVALIABLE_FOR_READING_2
        fi
    fi
fi

if [ -z $getElemFunc ]
then
    getElemFunc="wget"
fi

exit 0
