#!/bin/bash

ERR_NO_REPO="ERROR: Repo for this file is not created."

if [ -z $2 ]
then
    echo "ERROR: You should specify a file."
    exit 0
fi

case $1 in
    "init")
        if [ -f $2 ]
        then
            if [ -a ".$2" ]
            then
                if [ -d ".$2" ]
                then
                    echo "ERROR: Repo already exists."
                else
                    echo "ERROR: Repo can not be created: there is something named \".$2\"."
                fi
            else
                mkdir ".$2"
                echo "INFO: Made an empty repo for \"$2\"."
            fi
        else
            echo "ERROR: File \"$2\" doesn't exist! Can not init repo."
        fi
        ;;
    "commit")
        if [ -d ".$2" ]
        then
            if [ ! -f ".$2/HEAD" ]
            then
                echo "0" > ".$2/HEAD"
                cp $2 ".$2/lastver"
                echo "INFO: Committed at revision 0."
            else
                declare -i r=`cat ".$2/HEAD"`+1
                mv ".$2/lastver" ".$2/prelastver.tmp"
                cp $2 ".$2/lastver"
                diff ".$2/lastver" ".$2/prelastver.tmp" > ".$2/diffdownfrom_$r"
                rm ".$2/prelastver.tmp"
                
                echo $r > ".$2/HEAD"
                echo "INFO: Committed at revision $r."
            fi
        else
            echo $ERR_NO_REPO
        fi
        ;;
    "diff")
        if [ -d ".$2" ]
        then
            if [ -f ".$2/HEAD" ]
            then
                colordiff ".$2/lastver" $2
            else
                echo "ERROR: Nothing to compare with."
            fi
        else
            echo $ERR_NO_REPO
        fi
        ;;
    "status")
        if [ -d ".$2" ]
        then
            if [ -f ".$2/HEAD" ]
            then
                if diff -q ".$2/lastver" $2 >/dev/null 2>&1
                then
                    echo "INFO: File did not change."
                    exit 0
                else
                    echo "INFO: File has changed."
                    exit 1
                fi
            else
                echo "ERROR: Nothing to compare with."
            fi
        else
            echo $ERR_NO_REPO
        fi
        ;;
    "update")
        if [ -d ".$2" ]
        then
            if [ -f ".$2/HEAD" ]
            then
                if [ -z $3 ]
                then
                    echo "ERROR: You should specify revision to update to."
                else
                    declare -i head_rev=`cat ".$2/HEAD"`
                    declare -i need_rev=$3
                    if [ "$need_rev" -gt "$head_rev" ]
                    then
                        echo "ERROR: You want to get a revision, that is greater than head (head is $head_rev)."
                    else
                        if [ "$need_rev" -lt 0 ]
                        then
                            echo "ERROR: You want to get a revision lower than 0."
                        else
                            cp ".$2/lastver" $2
                            if [ "$need_rev" -lt "$head_rev" ]
                            then
                                declare -i lastpatchnum=$need_rev+1
                                for i in `seq $head_rev -1 $lastpatchnum`
                                do
                                    patch $2 ".$2/diffdownfrom_$i" >/dev/null
                                done
                            fi
                            echo "INFO: Updated to revision $need_rev. (Notice: head is $head_rev)"
                        fi
                    fi
                fi
            else
                echo "ERROR: There were no commits to this repo."
            fi
        else
            echo $ERR_NO_REPO
        fi
        ;;
    *)
        echo "ERROR: Unknown command."
esac

exit 0

